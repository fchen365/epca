% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utility.R
\name{gpower}
\alias{gpower}
\title{R interface for GPower.m}
\usage{
gpower(
  A,
  lambda = rep(0.1, m),
  m = 5,
  penalty = "l1",
  block = 1,
  mu = 1/seq_len(m),
  center = T,
  scale = F,
  order = T,
  paths_to_add = NULL
)
}
\arguments{
\item{A}{\code{matrix}, input data, p rows of variables, n columns of observations.}

\item{lambda}{\code{numeric}, tuning parameter(s).}

\item{m}{\code{integer}, number of components.}

\item{penalty}{either 'l1' or 'l0'.}

\item{block}{either 0 or 1. block==0 means that deflation is used if more than one component needs to be computed. A block algorithm is otherwise used, that computes m components at once.}

\item{mu}{a vector of m \code{numeric}, only required for the block algorithms.}

\item{center}{\code{logical}, whether to center the columns of A.}

\item{scale}{\code{logical}, whether to scale the columns of A.}

\item{order}{\code{logical} or "sdev" or "pve", whether to re-order the columns of loadings by the PVE \emph{decreasingly}.}

\item{paths_to_add}{\code{character(1)}, working directory of MATLAB.}
}
\value{
a list of
\item{loadings}{\code{matrix}, sparse loadings of PCs.}
\item{scores}{an n x k \code{matrix}, the component scores.}
\item{pve}{a \code{numeric} vector of length \code{k}, cumulative proportion of variance in \code{A} explained by the top PCs.}
\item{sdev}{a \code{numeric} vector of length \code{k}, standard deviation of each columns of scores. These may not sum to exactly 1 because of a slight loss of orthogonality.}
\item{center}{\code{logical}, this records the \code{center} parameter.}
\item{scale}{\code{logical}, this records the \code{scale} parameter.}
\item{n.obs}{\code{integer}, sample size, that is, \code{nrow(A)}.}
}
\description{
This function interacts with MATLAB and calls the GPower.m for sparse PCA.
The input parameters of this function match that of GPower.m too.
}
\references{
Journée, M., Nesterov, Y., Richtárik, P., & Sepulchre, R. (2010). Generalized power method for sparse principal component analysis. Journal of Machine Learning Research, 11(Feb), 517-553.
}
